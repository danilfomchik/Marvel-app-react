{"version":3,"file":"static/js/907.2bf1bf07.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundery.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","hooks/useAllData.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import { Component } from \"react\";\r\n\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundery extends Component{\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch = (error, errorInfo) => {\r\n        console.log(error, errorInfo);\r\n\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundery;","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return(\r\n        <img src={img} style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} alt='This is error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport useAllData from \"../../hooks/useAllData\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = () => {\n    const { loading, error, getAllComics } = useMarvelService();\n    const { data, newItemLoading, offset, charEnded, updateDataList } =\n        useAllData(getAllComics);\n\n    useEffect(() => {\n        updateDataList(offset, true);\n    }, []);\n\n    // console.log(\"comics!\");\n\n    const renderCards = (comics) => {\n        const elements = comics.map((char, i) => {\n            const { homepage, thumbnail, price, id, title } = char;\n\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${id}`}>\n                        <img\n                            src={thumbnail}\n                            alt=\"ultimate war\"\n                            className=\"comics__item-img\"\n                        />\n                        <div className=\"comics__item-name\">{title}</div>\n                        <div className=\"comics__item-price\">{price}$</div>\n                    </Link>\n                </li>\n            );\n        });\n\n        return <ul className=\"comics__grid\">{elements}</ul>;\n    };\n\n    const cards = renderCards(data);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {cards}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{ display: charEnded ? \"none\" : \"block\" }}\n                onClick={() => updateDataList(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    );\n};\n\nexport default ComicsList;\n","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useOutlet, Outlet } from \"react-router-dom\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport ErrorBoundery from \"../errorBoundary/ErrorBoundery\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    const outlet = useOutlet();\r\n\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ErrorBoundery>\r\n                <>{outlet ? <Outlet /> : <ComicsList />}</>\r\n            </ErrorBoundery>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import { useCallback, useState } from \"react\";\r\n\r\nconst useAllData = (getDataFunc) => {\r\n    const [data, setData] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n    const updateDataList = useCallback(\r\n        (offset, initial) => {\r\n            initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n\r\n            getDataFunc(offset).then(onDataLoaded);\r\n        },\r\n        [offset]\r\n    );\r\n\r\n    const onDataLoaded = (newData) => {\r\n        let ended = false;\r\n        if (newData.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        setData((prevData) => [...prevData, ...newData]);\r\n        setNewItemLoading(false);\r\n        setOffset((offset) => offset + 9);\r\n        setCharEnded(ended);\r\n    };\r\n\r\n    return {\r\n        data,\r\n        newItemLoading,\r\n        offset,\r\n        charEnded,\r\n        updateDataList,\r\n    };\r\n};\r\n\r\nexport default useAllData;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError } = useHttp();\r\n\r\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    const _apiKey = \"apikey=d047076055a53a4dbf6afb64cf4e109b\";\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(\r\n            `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n        );\r\n\r\n        return res.data.results.map(_transformCharacter);\r\n    };\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\r\n        return _transformCharacter(res.data.results[0]);\r\n    };\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(\r\n            `${_apiBase}comics?limit=12&offset=${offset}&${_apiKey}`\r\n        );\r\n\r\n        return res.data.results.map(_transformComic);\r\n    };\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\r\n        return _transformComic(res.data.results[0]);\r\n    };\r\n\r\n    const _transformComic = (comic) => {\r\n        let description = comic.description;\r\n\r\n        if (!description) {\r\n            description = \"There is no description for this comic...\";\r\n        }\r\n\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: description,\r\n            pages: comic.pageCount,\r\n            thumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension,\r\n            language: comic.textObjects.language || \"en-us\",\r\n            price: comic.prices[0].price,\r\n            homepage: comic.urls[0].url,\r\n        };\r\n    };\r\n\r\n    const _transformCharacter = (char) => {\r\n        let description = char.description;\r\n\r\n        if (description.length === 0) {\r\n            description = \"There is no description for this character...\";\r\n        } else if (char.description.length >= 180) {\r\n            description = description.substring(0, 180) + \" ...\";\r\n        }\r\n\r\n        return {\r\n            comics: char.comics.items,\r\n            id: char.id,\r\n            name: char.name,\r\n            description: description,\r\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n        };\r\n    };\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        getAllCharacters,\r\n        getCharacter,\r\n        getAllComics,\r\n        getComic,\r\n        clearError,\r\n    };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(\r\n        async (\r\n            url,\r\n            method = \"GET\",\r\n            body = null,\r\n            headers = { \"Content-Type\": \"application/json\" }\r\n        ) => {\r\n            setLoading(true);\r\n\r\n            try {\r\n                const response = await fetch(url, { method, body, headers });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(\r\n                        `Could not fetch ${url}, status: ${response.status}`\r\n                    );\r\n                }\r\n\r\n                const data = await response.json();\r\n\r\n                setLoading(false);\r\n\r\n                return data;\r\n            } catch (e) {\r\n                setLoading(false);\r\n                setError(e.message);\r\n\r\n                throw e;\r\n            }\r\n        },\r\n        []\r\n    );\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return { loading, request, error, clearError };\r\n};\r\n"],"names":["ErrorBoundery","state","error","componentDidCatch","errorInfo","console","log","setState","this","props","children","Component","src","img","style","display","width","height","objectFit","margin","alt","useMarvelService","loading","getAllComics","useAllData","data","newItemLoading","offset","charEnded","updateDataList","useEffect","cards","comics","elements","map","char","i","homepage","thumbnail","price","id","title","className","to","renderCards","errorMessage","ErrorMessage","spinner","Spinner","disabled","onClick","avengers","avengersLogo","outlet","useOutlet","getDataFunc","useState","setData","setNewItemLoading","setOffset","setCharEnded","useCallback","initial","then","onDataLoaded","newData","ended","length","prevData","setLoading","setError","request","url","method","body","headers","fetch","response","ok","Error","status","json","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","res","results","_transformCharacter","getCharacter","_transformComic","getComic","comic","description","pages","pageCount","path","extension","language","textObjects","prices","urls","substring","items","name","wiki"],"sourceRoot":""}